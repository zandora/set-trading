""" 
  Copyright 2022 Sandro Gasparoto
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
"""

# Set protocol: python code for trading set token components via 0x, rebalancing the set for all set holders

# ** Please replace < INPUT DATA> accordingly **

import json
import requests
from web3 import Web3 # web3 library
from decimal import * # we'll be working with large numbers (ERC-20 balances, ...)               

# connect to blockchain node provider (Infura, Alchemy, ...)
rpc_url = "< INPUT DATA >" # to get the RPC URL, check your provider
web3 = Web3(Web3.HTTPProvider(rpc_url))
rpc_status = web3.isConnected()
if (rpc_status != True):
    raise SystemExit('RPC connection to your blockchain node provider has failed...')

# input parameters
CHAIN_ID = 137 # network ID; for any supported network (ethereum, polygon, optimistic, ...), change URLs accordingly  
MANAGER = "< INPUT DATA >" # manager address
MANAGER_PRIVATE_KEY = "< INPUT DATA >" # manager private key ** although this is the case, it's recommended not to hardcode the key here! **
SET_TOKEN = "< INPUT DATA >" # set address
SEND_TOKEN = "< INPUT DATA >" # token address to send
RECEIVE_TOKEN = "< INPUT DATA >" # token address to receive
SCAN_SERV_API_KEY = "< INPUT DATA >" # api key for etherscan.io, polygonscan.com, ... or any other service to get current gas price
SCAN_SERV_API_ADDRESS = "https://api.polygonscan.com/api" # * polygon *, to be checked for other networks

# return the current price per gas
payload = {'module': 'proxy', 'action': 'eth_gasPrice', 'apiKey': SCAN_SERV_API_KEY}
r = requests.get(SCAN_SERV_API_ADDRESS, params=payload)
gas_price = int(int(r.json()["result"], 16)) # [wei]

# Note: for 0x trading, for every SEND_TOKEN you should set 0x's smart contract allowances permission using the 'approve' method
# e.g.: 
# spender = 0xdef1c0ded9bec7f1a1670819833240f027b25eff # 0x allowance target for * polygon *, to be checked for other networks
# amount =  can be <totalSupply> to be checked on https://polygonscan.com/address/<token address>#readContract

# contract abi (this should be the same for all ERC-20 contracts)
abi = json.loads('[{"inputs":[{"internalType":"address[]","name":"_components","type":"address[]"},{"internalType":"int256[]","name":"_units","type":"int256[]"},{"internalType":"address[]","name":"_modules","type":"address[]"},{"internalType":"contract IController","name":"_controller","type":"address"},{"internalType":"address","name":"_manager","type":"address"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_component","type":"address"}],"name":"ComponentAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_component","type":"address"}],"name":"ComponentRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_component","type":"address"},{"indexed":false,"internalType":"int256","name":"_realUnit","type":"int256"}],"name":"DefaultPositionUnitEdited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_component","type":"address"},{"indexed":true,"internalType":"address","name":"_positionModule","type":"address"},{"indexed":false,"internalType":"bytes","name":"_data","type":"bytes"}],"name":"ExternalPositionDataEdited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_component","type":"address"},{"indexed":true,"internalType":"address","name":"_positionModule","type":"address"},{"indexed":false,"internalType":"int256","name":"_realUnit","type":"int256"}],"name":"ExternalPositionUnitEdited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_target","type":"address"},{"indexed":true,"internalType":"uint256","name":"_value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"_data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"_returnValue","type":"bytes"}],"name":"Invoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newManager","type":"address"},{"indexed":false,"internalType":"address","name":"_oldManager","type":"address"}],"name":"ManagerEdited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_module","type":"address"}],"name":"ModuleAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_module","type":"address"}],"name":"ModuleInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_module","type":"address"}],"name":"ModuleRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_module","type":"address"}],"name":"PendingModuleRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_component","type":"address"},{"indexed":true,"internalType":"address","name":"_positionModule","type":"address"}],"name":"PositionModuleAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_component","type":"address"},{"indexed":true,"internalType":"address","name":"_positionModule","type":"address"}],"name":"PositionModuleRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int256","name":"_newMultiplier","type":"int256"}],"name":"PositionMultiplierEdited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"_component","type":"address"}],"name":"addComponent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_component","type":"address"},{"internalType":"address","name":"_positionModule","type":"address"}],"name":"addExternalPositionModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_module","type":"address"}],"name":"addModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"uint256","name":"_quantity","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"components","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"controller","outputs":[{"internalType":"contract IController","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_component","type":"address"},{"internalType":"int256","name":"_realUnit","type":"int256"}],"name":"editDefaultPositionUnit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_component","type":"address"},{"internalType":"address","name":"_positionModule","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"editExternalPositionData","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_component","type":"address"},{"internalType":"address","name":"_positionModule","type":"address"},{"internalType":"int256","name":"_realUnit","type":"int256"}],"name":"editExternalPositionUnit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int256","name":"_newMultiplier","type":"int256"}],"name":"editPositionMultiplier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getComponents","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_component","type":"address"}],"name":"getDefaultPositionRealUnit","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_component","type":"address"},{"internalType":"address","name":"_positionModule","type":"address"}],"name":"getExternalPositionData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_component","type":"address"}],"name":"getExternalPositionModules","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_component","type":"address"},{"internalType":"address","name":"_positionModule","type":"address"}],"name":"getExternalPositionRealUnit","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getModules","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPositions","outputs":[{"components":[{"internalType":"address","name":"component","type":"address"},{"internalType":"address","name":"module","type":"address"},{"internalType":"int256","name":"unit","type":"int256"},{"internalType":"uint8","name":"positionState","type":"uint8"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct ISetToken.Position[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_component","type":"address"}],"name":"getTotalComponentRealUnits","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initializeModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"invoke","outputs":[{"internalType":"bytes","name":"_returnValue","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_component","type":"address"}],"name":"isComponent","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_component","type":"address"},{"internalType":"address","name":"_module","type":"address"}],"name":"isExternalPositionModule","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_module","type":"address"}],"name":"isInitializedModule","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isLocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_module","type":"address"}],"name":"isPendingModule","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"locker","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"manager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"uint256","name":"_quantity","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"moduleStates","outputs":[{"internalType":"enum ISetToken.ModuleState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"modules","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"positionMultiplier","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_component","type":"address"}],"name":"removeComponent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_component","type":"address"},{"internalType":"address","name":"_positionModule","type":"address"}],"name":"removeExternalPositionModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_module","type":"address"}],"name":"removeModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_module","type":"address"}],"name":"removePendingModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_manager","type":"address"}],"name":"setManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}]')
# contract object
contract = web3.eth.contract(address=SET_TOKEN, abi=abi)

# get total position units (quantity per set)
position = Decimal(contract.functions.getDefaultPositionRealUnit(SEND_TOKEN).call()) # you can replace by a custom value for partial trading                   

# convert to checksummed addresses
setToken = web3.toChecksumAddress(SET_TOKEN)
sendToken = web3.toChecksumAddress(SEND_TOKEN)
receiveToken = web3.toChecksumAddress(RECEIVE_TOKEN)

# fetch calldata from 0x API
TOTAL_SUPPLY = Decimal(contract.functions.totalSupply().call()) # contract total supply
TOKEN_UNITS_ERC20 = Decimal(10**18)
sendQuantity = int(position * TOTAL_SUPPLY / TOKEN_UNITS_ERC20) # 0x requires the total notional quantity
slippagePercentage = 0.02 # max acceptable slipppage percentage allowed
payload = {'sellToken': sendToken, 'buyToken': receiveToken, 'sellAmount': sendQuantity, 'slippagePercentage': slippagePercentage}
r = requests.get('https://polygon.api.0x.org/swap/v1/quote', params=payload) # *polygon*
data = r.json()["data"] # returned trade calldata

# create and sign transaction
fn_name = "trade" # invoked function
exchangeName = "ZeroExApiAdapterV4"
minReceiveQuantity = 1 # use of slippagePercentage guarantees proper quantities to be traded
fn_args = [setToken, exchangeName, sendToken, int(position), receiveToken, minReceiveQuantity, data] # args
# TradeModule **polygon** contract deployed on https://polygonscan.com/address/0xd04AabadEd11e92Fefcd92eEdbBC81b184CdAc82
trade_module_address = "0xd04AabadEd11e92Fefcd92eEdbBC81b184CdAc82"
trade_module_abi = json.loads('[{"inputs":[{"internalType":"contract IController","name":"_controller","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract ISetToken","name":"_setToken","type":"address"},{"indexed":true,"internalType":"address","name":"_sendToken","type":"address"},{"indexed":true,"internalType":"address","name":"_receiveToken","type":"address"},{"indexed":false,"internalType":"contract IExchangeAdapter","name":"_exchange_adapterAdapter","type":"address"},{"indexed":false,"internalType":"uint256","name":"_totalSendAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_totalReceiveAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_protocolFee","type":"uint256"}],"name":"ComponentExchanged","type":"event"},{"inputs":[],"name":"controller","outputs":[{"internalType":"contract IController","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract ISetToken","name":"_setToken","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"removeModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ISetToken","name":"_setToken","type":"address"},{"internalType":"string","name":"_exchange_adapterName","type":"string"},{"internalType":"address","name":"_sendToken","type":"address"},{"internalType":"uint256","name":"_sendQuantity","type":"uint256"},{"internalType":"address","name":"_receiveToken","type":"address"},{"internalType":"uint256","name":"_minReceiveQuantity","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"trade","outputs":[],"stateMutability":"nonpayable","type":"function"}]')
trade_module_contract = web3.eth.contract(address=trade_module_address, abi=trade_module_abi)
transaction = dict(
    nonce = web3.eth.get_transaction_count(MANAGER), # number only used once
    gas = 1000000, # [units] gas for the transaction, it will return unused gas (tx usually requires around 600K units)
    gasPrice = gas_price, # cost to perform the transaction
    to = trade_module_address, # address of the contract to be invoked
    data = trade_module_contract.encodeABI(fn_name = fn_name, args = fn_args), # to encode invoked function and its arguments
    chainId = CHAIN_ID, # network ID
  )
signed_transaction = web3.eth.account.sign_transaction(transaction, MANAGER_PRIVATE_KEY)
 
# submit signed transaction
transaction_hash = web3.toHex(web3.eth.send_raw_transaction(signed_transaction.rawTransaction))
print('Tx_hash =',transaction_hash)
